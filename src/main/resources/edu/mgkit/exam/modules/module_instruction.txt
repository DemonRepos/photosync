Данный файл демонстрирует составление JSON-документа для добавление в программу.
Этот файл не является конечным результатом. После изменения всех параметров необходимо удалить все строки, не относящиеся к данным, а также переносы текста.
Пример получившегося файла находится в документе module_sample.txt

Весь файл заключается в фигурные скобки.
Все поля внутри файла пишутся по образцу "поле":"данные",
Имя поля не изменяется, вместо данных вписывается необходимая информация.
Если данные находятся в массиве, они заключаются в квадратные скобки  "массив":["данные1","данные2"],

{

В полях name и image указывается название ресурса и URL-адрес для загрузки изображения

	"name":"Module_For_App",
	"image":"https://img.icons8.com/all/500/module.png",

В поле authorization необходимо вставить строку oAuth-авторизации, согласно используемому API

	"authorization":"https://www.example.com/?field1=value1&field2=value2&redirect=https://www.example.com",

При составлении строки авторизации также указывается страница, на которую перенаправляется пользователь после авторизации. 
Её адрес необходимо записать в поле redirect.

	"redirect":"https://www.example.com",

В массиве access_params необходимо указать все поля, которые будут использоваться в последующих запросах после авторизации.
Обычно это только access_token, но у каждого API могут быть свои причуды.

	"access_params":["access_token","seccion_key"],

В поле photos_get вписывается URL-адрес функции, по которой нужно получить фотографии

	"photos_get":"https://www.example.com/?method=getPhoto",

Так как сайты предоставляют и ссылки для скачивания фотографий, проще получить именно эти ссылки.

В поле path_to_photos указываются все поля, которые необходимо пройти в ответе, чтобы получить массив с фотографиями.
Необходимо указать название поля и цифру.
Если в качестве объекта проходится массив, цифра указывает, какой элемент из массива надо выбрать.
Отсчет начинается с нуля (первый элемент - 0, второй - 1 и т.д.)
Если элемент является объектом, а не массивом, в качестве цифры ставится -1.

Например, в файле:

	{
	  "response":
	             {
		       "photos":
				[
				  {
				   "information":
						 [
						  {
						    "type":"icon",
						    "url":"www.photo1.jpg"
						  },

						  {
						    "type":"avatar",
						    "url":"www.photo2.jpg"
						  },

						  {
						    "type":"real_photo",
						    "url":"www.photo3.jpg"
						  }
						 ]
				   },

				  {
				   "information":
						 [
						  {
						    "type":"icon",
						    "url":"www.photo4.jpg"
						  },

						  {
						    "type":"avatar",
						    "url":"www.photo5.jpg"
						  },

						  {
						    "type":"real_photo",
						    "url":"www.photo6.jpg"
						  }
						 ]
				   }
				 ]
		    }
	}

Чтобы получить массив со всеми фотографиями, нужно указать путь "response" -> "photos".

	"path_to_photos":[{"field":"response","column":-1},{"field":"photos","column":0}],

А для получения адреса на скачивание фото в оригинальном размере, у каждого элемента массива photos 
нужно пройти по пути "information" -> 3 пункт -> "url"

	"path_to_url":[{"field":"information","column":2},{"field":"url","column":-1}],

Для загрузки фото на сервер в некоторых API нужно специально получать ссылку для загрузки и (или) подтверждать загрузку фотографии.
Чтобы отметить эту особенность, расположены поля isUploadServer и isCommitUpload.
isUploadServer показывает, нужно ли получать ссылку для загрузки, а isCommitUpload - нужно ли подтверждать загрузку изображения.
Если есть необходимость, нужно поставить true. Если такой необходимости нет - поставить false.

	"isUploadServer":true,
	"isCommitUpload":true,

В поле photos_upload записывается URL, на который загружается фотография.
Если данную ссылку необходимо сначала получить (isUploadServer) через запрос, в поле photos_upload записывается URL на получение ссылки загрузки

	"photos_upload":"https://www.example.com/?method=getUploadServer",

В path_to_upload_server записывается путь для получения элемента, содержащего ссылку для загрузки.
Если данную ссылку не требуется получать, массив можно оставить пустым ([]).

	"path_to_upload_server":[{"field":"response","column":-1},{"field":"url","column":-1}],

Если необходимо подтвердить загрузку фотографии (isCommitUpload), в поле path_to_params вносятся несколько массивов, каждый для своего параметра для подтверждения загрузки.
	
	"path_to_params":
		         [
				[  {"field":"response","column":-1}  ,  {"field":"photo","column":-1}  ],
				[  {"field":"response","column":-1}   ,  {"field":"server","column":-1}  ]
			 ],

В поле upload_commit записывается URL на функцию по подтверждению загрузки. 
Если дополнительного подтверждуния загрузки не требуется, массив path_to_params и поле upload_commit можно оставить пустыми.

"upload_commit":"https://www.example.com/?method=CommitUpload",

В path_to_result записывается путь по получению кода ответа. Это может быть число или надпись.

"path_to_result":[{"field":"response","column":-1},{"field":"parameters","column":0},{"field":"code","column":-1}],

В result_success записывается искомое значение результата, которое было получено по пути выше.

"result_success":"100"

В конце файл закрывается фигурной скобкой.

}